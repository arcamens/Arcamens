#!/usr/bin/env python

import os
import django
# import pika

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "arcamens.settings")
django.setup()


# your imports, e.g. Django models
from django.contrib.auth.models import User
User.objects.create_superuser('admin', 'admin@example.com', 'itrocksalot')

# connection = pika.BlockingConnection(pika.ConnectionParameters(host='localhost'))
# channel    = connection.channel()

from core_app.models import User, Organization
from timeline_app.models import Timeline

from core_app.models import Organization
from card_app.models import Card
from board_app.models import Board
from list_app.models import List

organization0 = Organization.objects.create(name='Arcamens' )
# channel.exchange_declare(exchange=str(organization0.id), exchange_type='direct')

user0  = User.objects.create(name='Victor Porton',  email='porton@narod.ru', password='111', default=organization0)
# queue0 = channel.queue_declare(queue=str(user0.id), durable=True)
user0.enabled = True
organization0.owner = user0
user0.organizations.add(organization0)
user0.save()

organization1 = Organization.objects.create(name='Splittask' )
user1 = User.objects.create(name='Iury de oliveira',  email='ioliveira@id.uff.br', password='111', default=organization1)
organization1.owner = user1


# user0.organizations.add(organization1)
user0.organizations.add(organization1)

user0.save()

# queue1 = channel.queue_declare(queue=str(user1.id), durable=True)
user1.enabled = True
user1.save()

organization0.admins.add(user0)
organization0.admins.add(user1)
organization1.admins.add(user0)
organization1.admins.add(user1)

organization0.save()
organization1.save()

user1.organizations.add(organization1)
# user1.organizations.add(organization0)

board = Board.objects.create(organization=organization1, owner=user1, name='Alpha')
board.members.add(user1)

list = List.objects.create(owner=user1, name='Alpha', ancestor=board)
from random import randint

label= 'This is a card label and it should be used with caution.'

for ind in range(50):
    Card.objects.create(owner=user1, 
        label=label * randint(0, 10), ancestor=list)





